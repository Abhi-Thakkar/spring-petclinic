/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'jacoco'
    id 'maven-publish'
    id 'org.springframework.boot' version '2.5.5'
    id 'org.liquibase.gradle' version '2.0.3'
    id 'org.sonarqube' version '3.3'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'org.sonarqube'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-actuator:2.5.5'
        implementation 'org.springframework.boot:spring-boot-starter-cache:2.5.5'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.5.5'
        implementation 'org.springframework.boot:spring-boot-starter-web:2.5.5'
        implementation 'org.springframework.boot:spring-boot-starter-validation:2.5.5'
        implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:2.5.5'
        implementation 'javax.cache:cache-api:1.1.1'
        implementation 'org.ehcache:ehcache:3.9.6'
        implementation 'org.webjars:webjars-locator-core:0.46'
        implementation 'org.webjars:jquery:2.2.4'
        implementation 'org.webjars:jquery-ui:1.11.4'
        implementation 'org.webjars:bootstrap:3.3.6'
        implementation 'org.springframework.boot:spring-boot-devtools:2.5.5'
        runtimeOnly 'com.h2database:h2:1.4.200'
        runtimeOnly 'mysql:mysql-connector-java:8.0.26'
        implementation 'org.codehaus.groovy:groovy-all:2.4.12'
        testImplementation 'org.springframework.boot:spring-boot-starter-test:2.5.5'
    }

    task sonarqube(dependsOn: test) {}

    repositories {
        mavenLocal()
        maven {
            url = uri('https://repo.spring.io/snapshot')
        }

        maven {
            url = uri('https://repo.spring.io/milestone')
        }

        maven {
            url = uri('https://repo.maven.apache.org/maven2/')
        }
    }

    jacocoTestReport {
        reports {
            xml.enabled true
        }
    }
    test.finalizedBy jacocoTestReport

    sonarqube {
        properties {
            property 'sonar.coverage.jacoco.xmlReportPaths', '${buildDir}/reports/jacocoTestReport.xml'
        }
    }

    test {
        useJUnitPlatform()
    }
}

bootJar {
    enabled = false
}

project (':api') {
    apply plugin: 'maven-publish'

    group = 'org.springframework.samples'
    version = '2.5.0'

    publishing {
        publications {
            maven(MavenPublication) {
                artifact("build/libs/api-$version"+".jar") {
                }
            }
        }
        repositories {
            maven {
                name 'nexus'
                url "http://nexus:8081/repository/maven-releases"
                allowInsecureProtocol = true
                credentials {
                    username project.repoUser
                    password project.repoPassword
                }
            }
        }
    }
}

project(':app') {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'org.liquibase.gradle'

    dependencies {
        liquibaseRuntime 'org.liquibase:liquibase-core:3.8.1'
        liquibaseRuntime 'org.liquibase:liquibase-groovy-dsl:2.1.1'
        liquibaseRuntime 'mysql:mysql-connector-java:8.0.12'
    }

    liquibase {
        activities {
            main {
                changeLogFile 'src/main/resources/db/mysql/changelog.xml'
                url 'jdbc:mysql://mysql:3306/petclinic?useSSL=false'
                username 'petclinic'
                password 'petclinic'
            }
        }
    }
}

group = 'org.springframework.samples'
version = '2.5.0-SNAPSHOT'
description = 'petclinic'
java.sourceCompatibility = JavaVersion.VERSION_1_8

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
